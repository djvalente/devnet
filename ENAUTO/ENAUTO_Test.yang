OrderedDict([('native', OrderedDict([('@xmlns', 'http://cisco.com/ns/yang/Cisco-IOS-XE-native'), ('version', '16.9'), ('boot-start-marker', None), ('boot-end-marker', None), ('banner', OrderedDict([('motd', OrderedDict([('banner', '^C')]))])), ('service', OrderedDict([('timestamps', OrderedDict([('debug', OrderedDict([('datetime', OrderedDict([('msec', None)]))])), ('log', OrderedDict([('datetime', OrderedDict([('msec', None)]))]))]))])), ('platform', OrderedDict([('console', OrderedDict([('@xmlns', 'http://cisco.com/ns/yang/Cisco-IOS-XE-platform'), ('output', 'virtual')]))])), ('hostname', 'CSR1kv'), ('username', OrderedDict([('name', 'cisco'), ('privilege', '15'), ('password', OrderedDict([('encryption', '0'), ('password', 'cisco123')]))])), ('ip', OrderedDict([('domain', OrderedDict([('name', 'example.netacad.com')])), ('forward-protocol', OrderedDict([('protocol', 'nd')])), ('http', OrderedDict([('@xmlns', 'http://cisco.com/ns/yang/Cisco-IOS-XE-http'), ('authentication', OrderedDict([('local', None)])), ('server', 'false'), ('secure-server', 'true')]))])), ('interface', OrderedDict([('GigabitEthernet', OrderedDict([('name', '1'), ('description', 'VBox'), ('ip', OrderedDict([('address', OrderedDict([('dhcp', None)]))])), ('mop', OrderedDict([('enabled', 'false'), ('sysid', 'false')])), ('negotiation', OrderedDict([('@xmlns', 'http://cisco.com/ns/yang/Cisco-IOS-XE-ethernet'), ('auto', 'true')]))]))])), ('control-plane', None), ('login', OrderedDict([('on-success', OrderedDict([('log', None)]))])), ('multilink', OrderedDict([('bundle-name', OrderedDict([('@xmlns', 'http://cisco.com/ns/yang/Cisco-IOS-XE-ppp'), ('#text', 'authenticated')]))])), ('redundancy', None), ('spanning-tree', OrderedDict([('extend', OrderedDict([('@xmlns', 'http://cisco.com/ns/yang/Cisco-IOS-XE-spanning-tree'), ('system-id', None)]))])), ('subscriber', OrderedDict([('templating', None)])), ('crypto', OrderedDict([('pki', OrderedDict([('@xmlns', 'http://cisco.com/ns/yang/Cisco-IOS-XE-crypto'), ('trustpoint', OrderedDict([('id', 'TP-self-signed-2228063053'), ('enrollment', OrderedDict([('selfsigned', None)])), ('revocation-check', 'none'), ('rsakeypair', OrderedDict([('key-label', 'TP-self-signed-2228063053')])), ('subject-name', 'cn=IOS-Self-Signed-Certificate-2228063053')])), ('certificate', OrderedDict([('chain', OrderedDict([('name', 'TP-self-signed-2228063053'), ('certificate', OrderedDict([('serial', '01'), ('certtype', 'self-signed')]))]))]))]))])), ('license', OrderedDict([('udi', OrderedDict([('pid', 'CSR1000V'), ('sn', '96RZ82EH6G5')]))])), ('line', OrderedDict([('console', OrderedDict([('first', '0'), ('logging', OrderedDict([('synchronous', None)])), ('stopbits', '1')])), ('vty', [OrderedDict([('first', '0'), ('last', '4'), ('login', OrderedDict([('local', None)])), ('transport', OrderedDict([('input', OrderedDict([('input', 'ssh')]))]))]), OrderedDict([('first', '5'), ('last', '15'), ('login', OrderedDict([('local', None)])), ('transport', OrderedDict([('input', OrderedDict([('input', 'ssh')]))]))])])])), ('diagnostic', OrderedDict([('@xmlns', 'http://cisco.com/ns/yang/Cisco-IOS-XE-diagnostics'), ('bootup', OrderedDict([('level', 'minimal')]))]))])), ('licensing', OrderedDict([('@xmlns', 'http://cisco.com/ns/yang/cisco-smart-license'), ('config', OrderedDict([('enable', 'false'), ('privacy', OrderedDict([('hostname', 'false'), ('version', 'false')])), ('utility', OrderedDict([('utility-enable', 'false')]))]))])), ('interfaces', [OrderedDict([('@xmlns', 'http://openconfig.net/yang/interfaces'), ('interface', OrderedDict([('name', 'GigabitEthernet1'), ('config', OrderedDict([('name', 'GigabitEthernet1'), ('type', OrderedDict([('@
xmlns:ianaift', 'urn:ietf:params:xml:ns:yang:iana-if-type'), ('#text', 'ianaift:ethernetCsmacd')])), ('description', 'VBox'), ('enabled', 'true')])), ('subinterfaces', OrderedDict([('subinterface', OrderedDict([('index', '0'), ('config', OrderedDict([('index', '0'), ('description', 'VBox'), ('enabled', 'true')])), ('ipv6', OrderedDict([('@xmlns', 'http://openconfig.net/yang/interfaces/ip'), ('config', OrderedDict([('enabled', 'false')]))]))]))])), ('ethernet', OrderedDict([('@xmlns', 'http://openconfig.net/yang/interfaces/ethernet'), ('config', OrderedDict([('mac-address', '00:0c:29:df:e1:c3'), ('auto-negotiate', 'true')]))]))]))]), OrderedDict([('@xmlns', 'urn:ietf:params:xml:ns:yang:ietf-interfaces'), ('interface', OrderedDict([('name', 'GigabitEthernet1'), ('description', 'VBox'), ('type', OrderedDict([('@
xmlns:ianaift', 'urn:ietf:params:xml:ns:yang:iana-if-type'), ('#text', 'ianaift:ethernetCsmacd')])), ('enabled', 'true'), ('ipv4', OrderedDict([('@xmlns', 'urn:ietf:params:xml:ns:yang:ietf-ip')])), ('ipv6', OrderedDict([('@xmlns', 'urn:ietf:params:xml:ns:yang:ietf-ip')]))]))])]), ('network-instances', OrderedDict([('@xmlns', 'http://openconfig.net/yang/network-instance'), ('network-instance', OrderedDict([('name', 'default'), ('config', OrderedDict([('name', 'default'), ('type', OrderedDict([('@
xmlns:oc-ni-types', 'http://openconfig.net/yang/network-instance-types'), ('#text', 'oc-ni-types:DEFAULT_INSTANCE')])), ('description', 'default-vrf [read-only]')])), ('tables', OrderedDict([('table', [OrderedDict([('protocol', OrderedDict([('@
xmlns:oc-pol-types', 'http://openconfig.net/yang/policy-types'), ('#text', 'oc-pol-types:DIRECTLY_CONNECTED')])), ('address-family', OrderedDict([('@
xmlns:oc-types', 'http://openconfig.net/yang/openconfig-types'), ('#text', 'oc-types:IPV4')])), ('config', OrderedDict([('protocol', OrderedDict([('@
xmlns:oc-pol-types', 'http://openconfig.net/yang/policy-types'), ('#text', 'oc-pol-types:DIRECTLY_CONNECTED')])), ('address-family', OrderedDict([('@
xmlns:oc-types', 'http://openconfig.net/yang/openconfig-types'), ('#text', 'oc-types:IPV4')]))]))]), OrderedDict([('protocol', OrderedDict([('@
xmlns:oc-pol-types', 'http://openconfig.net/yang/policy-types'), ('#text', 'oc-pol-types:DIRECTLY_CONNECTED')])), ('address-family', OrderedDict([('@
xmlns:oc-types', 'http://openconfig.net/yang/openconfig-types'), ('#text', 'oc-types:IPV6')])), ('config', OrderedDict([('protocol', OrderedDict([('@
xmlns:oc-pol-types', 'http://openconfig.net/yang/policy-types'), ('#text', 'oc-pol-types:DIRECTLY_CONNECTED')])), ('address-family', OrderedDict([('@
xmlns:oc-types', 'http://openconfig.net/yang/openconfig-types'), ('#text', 'oc-types:IPV6')]))]))]), OrderedDict([('protocol', OrderedDict([('@
xmlns:oc-pol-types', 'http://openconfig.net/yang/policy-types'), ('#text', 'oc-pol-types:STATIC')])), ('address-family', OrderedDict([('@
xmlns:oc-types', 'http://openconfig.net/yang/openconfig-types'), ('#text', 'oc-types:IPV4')])), ('config', OrderedDict([('protocol', OrderedDict([('@
xmlns:oc-pol-types', 'http://openconfig.net/yang/policy-types'), ('#text', 'oc-pol-types:STATIC')])), ('address-family', OrderedDict([('@
xmlns:oc-types', 'http://openconfig.net/yang/openconfig-types'), ('#text', 'oc-types:IPV4')]))]))]), OrderedDict([('protocol', OrderedDict([('@
xmlns:oc-pol-types', 'http://openconfig.net/yang/policy-types'), ('#text', 'oc-pol-types:STATIC')])), ('address-family', OrderedDict([('@
xmlns:oc-types', 'http://openconfig.net/yang/openconfig-types'), ('#text', 'oc-types:IPV6')])), ('config', OrderedDict([('protocol', OrderedDict([('@
xmlns:oc-pol-types', 'http://openconfig.net/yang/policy-types'), ('#text', 'oc-pol-types:STATIC')])), ('address-family', OrderedDict([('@
xmlns:oc-types', 'http://openconfig.net/yang/openconfig-types'), ('#text', 'oc-types:IPV6')]))]))])])])), ('protocols', OrderedDict([('protocol', [OrderedDict([('identifier', OrderedDict([('@
xmlns:oc-pol-types', 'http://openconfig.net/yang/policy-types'), ('#text', 'oc-pol-types:STATIC')])), ('name', 'DEFAULT'), ('config', OrderedDict([('identifier', OrderedDict([('@
xmlns:oc-pol-types', 'http://openconfig.net/yang/policy-types'), ('#text', 'oc-pol-types:STATIC')])), ('name', 'DEFAULT')]))]), OrderedDict([('identifier', OrderedDict([('@
xmlns:oc-pol-types', 'http://openconfig.net/yang/policy-types'), ('#text', 'oc-pol-types:DIRECTLY_CONNECTED')])), ('name', 'DEFAULT'), ('config', OrderedDict([('identifier', OrderedDict([('@
xmlns:oc-pol-types', 'http://openconfig.net/yang/policy-types'), ('#text', 'oc-pol-types:DIRECTLY_CONNECTED')])), ('name', 'DEFAULT')]))])])]))]))])), ('nacm', OrderedDict([('@xmlns', 'urn:ietf:params:xml:ns:yang:ietf-netconf-acm'), ('enable-nacm', 'true'), ('read-default', 'deny'), ('write-default', 'deny'), ('exec-default', 'deny'), ('enable-external-groups', 'true'), ('rule-list', OrderedDict([('name', 'admin'), ('group', 'PRIV15'), ('rule', OrderedDict([('name', 'permit-all'), ('module-name', '*'), ('access-operations', '*'), ('action', 'permit')]))]))])), ('routing', OrderedDict([('@xmlns', 'urn:ietf:params:xml:ns:yang:ietf-routing'), ('routing-instance', OrderedDict([('name', 'default'), ('description', 'default-vrf [read-only]'), ('routing-protocols', OrderedDict([('routing-protocol', OrderedDict([('type', 'static'), ('name', '1')]))]))]))]))])